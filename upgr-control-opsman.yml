resource_types:
- name: pivnet
  type: docker-image
  source:
    repository: pivotalcf/pivnet-resource
    tag: latest-final

- name: slack-alert
  type: docker-image
  source:
    repository: arbourd/concourse-slack-alert-resource


resources:

- name: notify
  type: slack-alert
  icon: slack
  source:
    url: ((slack_webhook))

- name: platform-automation-tasks
  type: s3
  icon: file
  source:
    endpoint: ((minio_endpoint))
    access_key_id: ((minio_access_key_id))
    secret_access_key: ((minio_secret_access_key))
    bucket: ((minio_buckets_platform_automation))
    regexp: .*tasks-(.*).zip

- name: platform-automation-image
  type: s3
  icon: file
  source:
    endpoint: ((minio_endpoint))
    access_key_id: ((minio_access_key_id))
    secret_access_key: ((minio_secret_access_key))
    bucket: ((minio_buckets_platform_automation))
    regexp: .*image-(.*).tgz
- name: env
  type: git
  icon: github-circle
  source:
    uri: ((platform-automation-pipelines-kirklab-env))
    private_key: ((platform-automation-pipelines-kirklab-deploy-key-readonly.private_key))
    branch: master
- name: installation
  type: s3
  icon: file-upload
  source:
    endpoint: ((minio_endpoint))
    access_key_id: ((minio_access_key_id))
    secret_access_key: ((minio_secret_access_key))
    bucket: ((minio_buckets_installation))
    regexp: installation-(.*).zip

jobs:

- name: export-installation
  plan:
    - get: platform-automation-image
      params:
        unpack: true
    - get: platform-automation-tasks
      params:
        unpack: true
    - get: env
    - task: credhub-interpolate
      image: platform-automation-image
      file: platform-automation-tasks/tasks/credhub-interpolate.yml
      input_mapping:
        files: env
      output_mapping:
        interpolated-files: env
      params:
        # all required
        CREDHUB_CLIENT: ((credhub_client))
        CREDHUB_SECRET: ((credhub_secret))
        CREDHUB_SERVER: ((credhub_server))
        CREDHUB_CA_CERT: ((credhub_ca_cert))
        PREFIX: /((foundation))
        ENV_FILE: ((foundation))/env/env.yml
    - task: export-installation
      image: platform-automation-image
      file: platform-automation-tasks/tasks/export-installation.yml
      params:
        ENV_FILE: ((foundation))/env/env.yml
    - put: installation
      params:
        file: installation/installation-*.zip
- name: upgrade-opsman
  serial: true
  plan:
  - get: platform-automation-image
    params:
      unpack: true
  - get: platform-automation-tasks
    params:
      unpack: true
  - get: env
  - get: installation
    trigger: true
    passed:
      - export-installation
  - task: credhub-interpolate
    image: platform-automation-image
    file: platform-automation-tasks/tasks/credhub-interpolate.yml
    params:
      CREDHUB_CLIENT: ((credhub_client))
      CREDHUB_SECRET: ((credhub_secret))
      CREDHUB_SERVER: ((credhub_server))
      CREDHUB_CA_CERT: ((credhub_ca_cert))
      PREFIX: /((foundation))
      # A file path that includes env.yml, opsman.yml, download-opsman.yml
      INTERPOLATION_PATH: ((foundation)) 
    input_mapping:
      files: env
    output_mapping:
      interpolated-files: env
  - task: download-opsman-image
    image: platform-automation-image
    file: platform-automation-tasks/tasks/download-product.yml
    params:
      CONFIG_FILE: ((foundation))/config/download-opsman.yml
    on_failure:
      put: notify
      params:
        alert_type: failed
        message: "((foundation)) ops manager failed to download."
    input_mapping:
      config: env
  - task: upgrade-opsman
    image: platform-automation-image
    file: platform-automation-tasks/tasks/upgrade-opsman.yml
    input_mapping:
      config: env
      image: downloaded-product
      secrets: env
      state: env
    params:
      ENV_FILE: ((foundation))/env/env.yml
      OPSMAN_CONFIG_FILE: ((foundation))/config/opsman.yml
      STATE_FILE: ((foundation))/state/state.yml
    on_failure:
      put: notify
      params:
        alert_type: failed
        message: "((foundation)) ops manager failed to upgrade."
    on_success:
      put: notify
      params:
        alert_type: success
        text: "((foundation)) ops manager successfully upgraded."