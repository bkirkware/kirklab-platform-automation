resources:
  - name: platform-automation-tasks
    type: s3
    source:
      access_key_id: ((aws_access_key_id))
      secret_access_key: ((aws_secret_access_key))
      region_name: ((aws_region_name))
      bucket: ((aws_buckets_pivnet_products))
      regexp: .*tasks-(.*).zip

  - name: platform-automation-image
    type: s3
    source:
      access_key_id: ((aws_access_key_id))
      secret_access_key: ((aws_secret_access_key))
      region_name: ((aws_region_name))
      bucket: ((aws_buckets_pivnet_products))
      regexp: .*image-(.*).tgz

  - name: pas-srt-stemcell
    type: s3
    source:
      access_key_id: ((aws_access_key_id))
      secret_access_key: ((aws_secret_access_key))
      region_name: ((aws_region_name))
      bucket: ((aws_buckets_pivnet_products))
      regexp: pas-srt-stemcell/bosh-stemcell-(.*)-vsphere.*\.tgz

  - name: pas-srt-product
    type: s3
    source:
      access_key_id: ((aws_access_key_id))
      secret_access_key: ((aws_secret_access_key))
      region_name: ((aws_region_name))
      bucket: ((aws_buckets_pivnet_products))
      regexp: srt-(.*).pivotal

  - name: healthwatch-stemcell
    type: s3
    source:
      access_key_id: ((aws_access_key_id))
      secret_access_key: ((aws_secret_access_key))
      region_name: ((aws_region_name))
      bucket: ((aws_buckets_pivnet_products))
      regexp: healthwatch-stemcell/bosh-stemcell-(.*)-vsphere.*\.tgz

  - name: healthwatch-product
    type: s3
    source:
      access_key_id: ((aws_access_key_id))
      secret_access_key: ((aws_secret_access_key))
      region_name: ((aws_region_name))
      bucket: ((aws_buckets_pivnet_products))
      regexp: p-healthwatch-(.*).pivotal

  # configurations
  - name: configuration
    type: git
    source:
      uri: ((platform-automation-pipelines-kirklab-env))
      private_key: ((platform-automation-pipelines-kirklab-deploy-key-readonly.private_key))
      branch: master

  - name: variable
    type: git
    source:
      uri: ((platform-automation-pipelines-kirklab-env))
      private_key: ((platform-automation-pipelines-kirklab-deploy-key-readonly.private_key))
      branch: master

jobs:
  - name: upload-and-stage-pas
    serial: true
    plan:
      - aggregate:
          - get: platform-automation-image
            params:
              unpack: true
            trigger: true
          - get: platform-automation-tasks
            params:
              unpack: true
          - get: pas-srt-product
          - get: configuration
          - get: variable
      - task: credhub-interpolate
        image: platform-automation-image
        file: platform-automation-tasks/tasks/credhub-interpolate.yml
        params:
          CREDHUB_CLIENT: ((credhub_client))
          CREDHUB_SECRET: ((credhub_secret))
          CREDHUB_SERVER: ((credhub_server))
          CREDHUB_CA_CERT: ((credhub_ca_cert))
          PREFIX: /((foundation))
          INTERPOLATION_PATH: "((foundation))"
        input_mapping:
          files: configuration
        output_mapping:
          interpolated-files: configuration
      - task: upload-product
        image: platform-automation-image
        file: platform-automation-tasks/tasks/upload-product.yml
        input_mapping:
          product: pas-srt-product
          env: configuration
        params:
          ENV_FILE: ((foundation))/env/env.yml
      - task: stage-product
        image: platform-automation-image
        file: platform-automation-tasks/tasks/stage-product.yml
        input_mapping:
          product: pas-srt-product
          env: configuration
        params:
          ENV_FILE: ((foundation))/env/env.yml

  - name: upload-stemcells
    serial: true
    plan:
      - aggregate:
          - get: platform-automation-image
            params:
              unpack: true
            trigger: true
          - get: platform-automation-tasks
            params:
              unpack: true
          - get: pas-srt-stemcell
            trigger: true
          - get: healthwatch-stemcell
            trigger: true
          - get: configuration
          - get: variable
      - task: credhub-interpolate
        image: platform-automation-image
        file: platform-automation-tasks/tasks/credhub-interpolate.yml
        params:
          CREDHUB_CLIENT: ((credhub_client))
          CREDHUB_SECRET: ((credhub_secret))
          CREDHUB_SERVER: ((credhub_server))
          CREDHUB_CA_CERT: ((credhub_ca_cert))
          PREFIX: /((foundation))
          INTERPOLATION_PATH: "((foundation))"
        input_mapping:
          files: configuration
        output_mapping:
          interpolated-files: configuration
      - task: upload-pas-srt-stemcell
        image: platform-automation-image
        file: platform-automation-tasks/tasks/upload-stemcell.yml
        input_mapping:
          env: configuration
          stemcell: pas-srt-stemcell
        params:
          ENV_FILE: ((foundation))/env/env.yml
      - task: upload-healthwatch-stemcell
        image: platform-automation-image
        file: platform-automation-tasks/tasks/upload-stemcell.yml
        input_mapping:
          env: configuration
          stemcell: healthwatch-stemcell
        params:
          ENV_FILE: ((foundation))/env/env.yml

  - name: upload-and-stage-healthwatch
    serial: true
    plan:
      - aggregate:
          - get: platform-automation-image
            params:
              unpack: true
            trigger: true
          - get: platform-automation-tasks
            params:
              unpack: true
          - get: healthwatch-product
          - get: configuration
          - get: variable
      - task: credhub-interpolate
        image: platform-automation-image
        file: platform-automation-tasks/tasks/credhub-interpolate.yml
        params:
          CREDHUB_CLIENT: ((credhub_client))
          CREDHUB_SECRET: ((credhub_secret))
          CREDHUB_SERVER: ((credhub_server))
          CREDHUB_CA_CERT: ((credhub_ca_cert))
          PREFIX: /((foundation))
          INTERPOLATION_PATH: "((foundation))"
        input_mapping:
          files: configuration
        output_mapping:
          interpolated-files: configuration
      - task: upload-and-stage-product
        image: platform-automation-image
        file: platform-automation-tasks/tasks/upload-and-stage-product.yml
        input_mapping:
          product: healthwatch-product
          env: configuration
        params:
          ENV_FILE: ((foundation))/env/env.yml

  - name: apply-product-changes
    serial: true
    plan:
      - aggregate:
          - get: platform-automation-image
            params:
              unpack: true
            passed:
              - upload-and-stage-pas
              - upload-and-stage-healthwatch
              - upload-stemcells
            trigger: true
          - get: platform-automation-tasks
            params:
              unpack: true
          - get: configuration
          - get: variable
      - task: credhub-interpolate
        image: platform-automation-image
        file: platform-automation-tasks/tasks/credhub-interpolate.yml
        params:
          CREDHUB_CLIENT: ((credhub_client))
          CREDHUB_SECRET: ((credhub_secret))
          CREDHUB_SERVER: ((credhub_server))
          CREDHUB_CA_CERT: ((credhub_ca_cert))
          PREFIX: /((foundation))
          INTERPOLATION_PATH: "((foundation))"
        input_mapping:
          files: configuration
        output_mapping:
          interpolated-files: configuration
      - task: apply-product-changes
        image: platform-automation-image
        file: platform-automation-tasks/tasks/apply-changes.yml
        input_mapping:
          env: configuration
        params:
          ENV_FILE: ((foundation))/env/env.yml