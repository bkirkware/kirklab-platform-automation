resource_types:
- name: pivnet
  type: docker-image
  source:
    repository: pivotalcf/pivnet-resource
    tags: latest-final

resources:
- name: platform-automation
  type: pivnet
  source:
    api_token: ((pivnet_token))
    product_slug: platform-automation

- name: configuration
  type: git
  source:
    uri: git@github.com:doddatpivotal/platform-automation-example.git
    private_key: ((platform_automation_example_git_repo.private_key))

jobs:

- name: generate-all-certs
  plan:
  - aggregate:
    - get: configuration
    - get: platform-automation-image
      resource: platform-automation
      params:
        unpack: true
        globs: ["*image*"]
    - get: platform-automation-tasks
      resource: platform-automation
      params:
        unpack: true
        globs: ["*tasks*"]

  - task: credhub-interpolate
    image: platform-automation-image
    file: platform-automation-tasks/tasks/credhub-interpolate.yml
    params: &credhub_interpolate_params
      CREDHUB_SERVER: ((credhub_server))
      CREDHUB_CA_CERT: ((credhub_ca_cert.certificate))
      CREDHUB_CLIENT: concourse_to_credhub
      CREDHUB_SECRET: ((concourse_to_credhub_secret))
      PREFIX: '/((foundation))-foundation'
      INTERPOLATION_PATHS: "environments/((iaas))/((foundation))/config-common/secrets"
    input_mapping:
      files: configuration
    output_mapping:
      interpolated-files: interpolated-files

  - task: generate-harbor-container-registry-cert
    image: platform-automation-image
    file: configuration/proposed-tasks/generate-cert.yml
    params:
      ENV_FILE: interpolated-files/environments/((iaas))/((foundation))/config-common/secrets/env.yml
      CREDHUB_CLIENT: concourse_to_credhub
      CREDHUB_SECRET: ((concourse_to_credhub_secret))
      CREDHUB_SERVER: ((credhub_server))
      CREDHUB_CA_CERT: ((credhub_ca_cert.certificate))
      DOMAINS: "*.((core_domain))"
      CRED_NAME: "/((foundation))-foundation/harbor-container-registry/server_cert_key"
    input_mapping:
      interpolated-files: interpolated-files

  - task: generate-pivotal-container-service-cert
    image: platform-automation-image
    file: configuration/proposed-tasks/generate-cert.yml
    params:
      ENV_FILE: interpolated-files/environments/((iaas))/((foundation))/config-common/secrets/env.yml
      CREDHUB_CLIENT: concourse_to_credhub
      CREDHUB_SECRET: ((concourse_to_credhub_secret))
      CREDHUB_SERVER: ((credhub_server))
      CREDHUB_CA_CERT: ((credhub_ca_cert.certificate))
      DOMAINS: "*.pks.((core_domain)),*.api.pks.((core_domain))"
      CRED_NAME: "/((foundation))-foundation/pivotal-container-service/pks_tls"
    input_mapping:
      interpolated-files: interpolated-files

  - task: generate-cf-cert-0
    image: platform-automation-image
    file: configuration/proposed-tasks/generate-cert.yml
    params:
      ENV_FILE: interpolated-files/environments/((iaas))/((foundation))/config-common/secrets/env.yml
      CREDHUB_CLIENT: concourse_to_credhub
      CREDHUB_SECRET: ((concourse_to_credhub_secret))
      CREDHUB_SERVER: ((credhub_server))
      CREDHUB_CA_CERT: ((credhub_ca_cert.certificate))
      DOMAINS: "*.((core_domain)),*.((cloud_controller_system_domain)),*.((cloud_controller_apps_domain)),*.login.((cloud_controller_system_domain)),*.uaa.((cloud_controller_system_domain))"
      CRED_NAME: "/((foundation))-foundation/cf/networking_poe_ssl_certs_0_certificate"
    input_mapping:
      interpolated-files: interpolated-files

  - task: generate-cf-cert-1
    image: platform-automation-image
    file: configuration/proposed-tasks/generate-cert.yml
    params:
      ENV_FILE: interpolated-files/environments/((iaas))/((foundation))/config-common/secrets/env.yml
      CREDHUB_CLIENT: concourse_to_credhub
      CREDHUB_SECRET: ((concourse_to_credhub_secret))
      CREDHUB_SERVER: ((credhub_server))
      CREDHUB_CA_CERT: ((credhub_ca_cert.certificate))
      DOMAINS: "*.login.((cloud_controller_system_domain)),*.uaa.((cloud_controller_system_domain))"
      CRED_NAME: "/((foundation))-foundation/cf/uaa_service_provider_key_credentials"
    input_mapping:
      interpolated-files: interpolated-files