---
resource_types:
- name: pivnet
  type: docker-image
  source:
    repository: pivotalcf/pivnet-resource
    tag: latest-final
resources:

- name: daily
  type: time
  source:
    interval: 24h
- name: platform-automation
  type: pivnet
  source:
    product_slug: platform-automation
    api_token: ((pivnet-refresh-token))
- name: env
  type: git
  source:
    uri: ((platform-automation-pipelines-kirklab-env))
    private_key: ((platform-automation-pipelines-kirklab-deploy-key-readonly.private_key))
    branch: master
- name: installation-s3
  type: s3
  source:
    access_key_id: ((aws_access_key_id))
    bucket: ((aws_buckets_control_installation))
    region_name: ((aws_region_name))
    secret_access_key: ((aws_secret_access_key))
    regexp: installation-(.*).zip
- name: minio-s3
  type: s3
  source:
    regexp: installation-(.*).zip
    endpoint: ((minio_endpoint))
    bucket: ((minio_buckets_control_installation))
    access_key_id: ((minio_access_key_id))
    secret_access_key: ((minio_secret_access_key))
    disable_ssl: true
jobs:
- name: export-installation
  plan:
    - get: daily
      trigger: true
    - get: platform-automation-image
      resource: platform-automation
      params:
        globs: ["*image*.tgz"]
        unpack: true
    - get: platform-automation-tasks
      resource: platform-automation
      params:
        globs: ["*tasks*.zip"]
        unpack: true
    - get: env
    - task: credhub-interpolate
      image: platform-automation-image
      file: platform-automation-tasks/tasks/credhub-interpolate.yml
      input_mapping:
        files: env
      output_mapping:
        interpolated-files: env
      params:
        # all required
        CREDHUB_CA_CERT: ((credhub_ca_cert))
        CREDHUB_CLIENT: ((credhub_client))
        CREDHUB_SECRET: ((credhub_secret))
        CREDHUB_SERVER: ((credhub_server))
        PREFIX: /((foundation))
        ENV_FILE: ((foundation))/env/env.yml
    - task: export-installation
      image: platform-automation-image
      file: platform-automation-tasks/tasks/export-installation.yml
      params:
        ENV_FILE: ((foundation))/env/env.yml
    - put: installation-s3
      params:
        file: installation/installation-*.zip
    - put: minio-s3
      params:
        file: installation/installation-*.zip