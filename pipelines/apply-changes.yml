---
groups:
  - name: basic-apply
    jobs: 
      - lock-((foundation))
      - apply-product-changes
      - unlock-((foundation))
  - name: apply-with-all-service-instances
    jobs: 
      - errand-lock-((foundation))
      - errand-apply-product-changes
      - upgrade-all-rabbitmq-instances
      - upgrade-all-pcc-instances
      - upgrade-all-redis-instances
      - upgrade-all-pks-instances
      - upgrade-all-mysql-instances
      - errand-unlock-((foundation))
  - name: ad-hoc-jobs
    jobs: 
      - force-lock
      - force-unlock



resource_types:

- name: slack-alert
  type: docker-image
  source:
    repository: arbourd/concourse-slack-alert-resource

- name: pivnet
  type: docker-image
  source:
    repository: pivotalcf/pivnet-resource
    tags: latest-final

resources:

- name: notify
  type: slack-alert
  icon: slack
  source:
    url: ((slack-webhook))

- name: platform-automation-tasks
  type: s3
  icon: file
  source:
    access_key_id: ((minio-access-key-id))
    secret_access_key: ((minio-secret-access-key))
    endpoint: ((minio-endpoint))
    bucket: ((minio-buckets-platform-automation))
    regexp: .*tasks-(.*).zip
    disable_ssl: true

- name: platform-automation-image
  type: s3
  icon: file
  source:
    access_key_id: ((minio-access-key-id))
    secret_access_key: ((minio-secret-access-key))
    endpoint: ((minio-endpoint))
    bucket: ((minio-buckets-platform-automation))
    regexp: .*image-(.*).tgz
    disable_ssl: true

- name: lock
  type: pool
  icon: lock
  source:
    branch: master
    uri: git@github.com:bkirkware/kirklab-locks
    private_key: ((platform-automation-pipelines-kirklab-locks-key-private-key))
    pool: ((foundation))
    retry_delay: 1m

- name: configuration
  type: git
  icon: github-circle
  source:
    uri: ((platform-automation-pipelines-kirklab-env))
    private_key: ((platform-automation-pipelines-kirklab-deploy-key-readonly-private-key))
    branch: master

jobs:

- name: force-unlock
  serial: true
  plan:
  - get: lock
  - put: lock
    params:
      release: lock

- name: force-lock
  serial: true
  plan:
  - get: lock
  - put: lock
    params: {acquire: true}


- name: lock-((foundation))
  plan:
  - put: lock
    params: {acquire: true}
    on_failure:
      put: notify
      params:
        alert_type: failed
        message: "((foundation)) failed to lock."
      
- name: errand-lock-((foundation))
  plan:
  - put: lock
    params: {acquire: true}
    on_failure:
      put: notify
      params:
        alert_type: failed
        message: "((foundation)) failed to lock."
  
- name: apply-product-changes
  plan:
    - in_parallel:
        - get: platform-automation-image
          params:
            unpack: true
        - get: platform-automation-tasks
          params:
            unpack: true
        - get: configuration
        - get: lock
          passed:
            - lock-((foundation))
          trigger: true
    - task: credhub-interpolate
      image: platform-automation-image
      file: platform-automation-tasks/tasks/credhub-interpolate.yml
      params:
        CREDHUB_CLIENT: ((credhub-client))
        CREDHUB_SECRET: ((credhub-secret))
        CREDHUB_SERVER: ((credhub-server))
        CREDHUB_CA_CERT: ((credhub-ca-cert))
        PREFIX: /((foundation))
        INTERPOLATION_PATH: "((foundation))"
      input_mapping:
        files: configuration
      output_mapping:
        interpolated-files: configuration
    - task: apply-product-changes
      image: platform-automation-image
      file: platform-automation-tasks/tasks/apply-changes.yml
      input_mapping:
        env: configuration
      params:
        ENV_FILE: ((foundation))/env/env.yml
      on_failure:
        put: notify
        params:
          alert_type: failed
          message: "((foundation)) apply changes failed."

- name: errand-apply-product-changes
  plan:
    - in_parallel:
        - get: platform-automation-image
          params:
            unpack: true
        - get: platform-automation-tasks
          params:
            unpack: true
        - get: configuration
        - get: lock
          passed:
            - errand-lock-((foundation))
          trigger: true
    - task: credhub-interpolate
      image: platform-automation-image
      file: platform-automation-tasks/tasks/credhub-interpolate.yml
      params:
        CREDHUB_CLIENT: ((credhub-client))
        CREDHUB_SECRET: ((credhub-secret))
        CREDHUB_SERVER: ((credhub-server))
        CREDHUB_CA_CERT: ((credhub-ca-cert))
        PREFIX: /((foundation))
        INTERPOLATION_PATH: "((foundation))"
      input_mapping:
        files: configuration
      output_mapping:
        interpolated-files: configuration
    - task: apply-product-changes
      image: platform-automation-image
      file: platform-automation-tasks/tasks/apply-changes.yml
      input_mapping:
        env: configuration
      params:
        ENV_FILE: ((foundation))/env/env.yml
      on_failure:
        put: notify
        params:
          alert_type: failed
          message: "((foundation)) apply changes failed."

- name: unlock-((foundation))
  serial: true
  plan:
  - get: lock
    passed:
      - apply-product-changes
    trigger: true
  - put: lock
    params:
      release: lock
    on_failure:
      put: notify
      params:
        alert_type: failed
        message: "((foundation)) failed to unlock."
    on_success:
      put: notify
      params:
        alert_type: success
        text: "((foundation)) apply changes succeeded."

- name: errand-unlock-((foundation))
  serial: true
  plan:
  - get: lock
    passed:
      - upgrade-all-mysql-instances
    trigger: true
  - put: lock
    params:
      release: lock
    on_failure:
      put: notify
      params:
        alert_type: failed
        message: "((foundation)) failed to unlock."
    on_success:
      put: notify
      params:
        alert_type: success
        text: "((foundation)) apply changes succeeded."

- name: upgrade-all-rabbitmq-instances
  plan:
    - in_parallel:
        - get: platform-automation-image
          params:
            unpack: true
        - get: platform-automation-tasks
          params:
            unpack: true
        - get: configuration
        - get: lock
          passed:
            - errand-apply-product-changes
          trigger: true
    - task: credhub-interpolate
      image: platform-automation-image
      file: platform-automation-tasks/tasks/credhub-interpolate.yml
      params:
        CREDHUB_CLIENT: ((credhub-client))
        CREDHUB_SECRET: ((credhub-secret))
        CREDHUB_SERVER: ((credhub-server))
        CREDHUB_CA_CERT: ((credhub-ca-cert))
        PREFIX: /((foundation))
        INTERPOLATION_PATH: "((foundation))"
      input_mapping:
        files: configuration
      output_mapping:
        interpolated-files: interpolated-files
    - task: staged-config
      image: platform-automation-image
      file: platform-automation-tasks/tasks/staged-config.yml
      params:
        PRODUCT_NAME: p-rabbitmq
        ENV_FILE: ((foundation))/env/env.yml
      input_mapping:
        env: interpolated-files
      output_mapping:
        generated-config: generated-config
    - task: run-errand
      image: platform-automation-image
      file: configuration/custom-tasks/run-errand.yml
      input_mapping:
        env: interpolated-files
        config: generated-config
      params:
        ENV_FILE: ((foundation))/env/env.yml
        ERRAND_NAME: upgrade-all-service-instances
        CONFIG_FILE: p-rabbitmq.yml
      on_failure:
        put: notify
        params:
          alert_type: failed
          message: "((foundation)) rabbitmq service instance errand failed."

- name: upgrade-all-mysql-instances
  plan:
    - in_parallel:
        - get: platform-automation-image
          params:
            unpack: true
        - get: platform-automation-tasks
          params:
            unpack: true
        - get: configuration
        - get: lock
          passed:
            - upgrade-all-pks-instances
          trigger: true
    - task: credhub-interpolate
      image: platform-automation-image
      file: platform-automation-tasks/tasks/credhub-interpolate.yml
      params:
        CREDHUB_CLIENT: ((credhub-client))
        CREDHUB_SECRET: ((credhub-secret))
        CREDHUB_SERVER: ((credhub-server))
        CREDHUB_CA_CERT: ((credhub-ca-cert))
        PREFIX: /((foundation))
        INTERPOLATION_PATH: "((foundation))"
      input_mapping:
        files: configuration
      output_mapping:
        interpolated-files: interpolated-files
    - task: staged-config
      image: platform-automation-image
      file: platform-automation-tasks/tasks/staged-config.yml
      params:
        PRODUCT_NAME: pivotal-mysql
        ENV_FILE: ((foundation))/env/env.yml
      input_mapping:
        env: interpolated-files
      output_mapping:
        generated-config: generated-config
    - task: run-errand
      image: platform-automation-image
      file: configuration/custom-tasks/run-errand.yml
      input_mapping:
        env: interpolated-files
        config: generated-config
      params:
        ENV_FILE: ((foundation))/env/env.yml
        ERRAND_NAME: upgrade-all-service-instances
        CONFIG_FILE: pivotal-mysql.yml
      on_failure:
        put: notify
        params:
          alert_type: failed
          message: "((foundation)) mysql service instance errand failed."
  
- name: upgrade-all-pks-instances
  plan:
    - in_parallel:
        - get: platform-automation-image
          params:
            unpack: true
        - get: platform-automation-tasks
          params:
            unpack: true
        - get: configuration
        - get: lock
          passed:
            - upgrade-all-pcc-instances
          trigger: true
    - task: credhub-interpolate
      image: platform-automation-image
      file: platform-automation-tasks/tasks/credhub-interpolate.yml
      params:
        CREDHUB_CLIENT: ((credhub-client))
        CREDHUB_SECRET: ((credhub-secret))
        CREDHUB_SERVER: ((credhub-server))
        CREDHUB_CA_CERT: ((credhub-ca-cert))
        PREFIX: /((foundation))
        INTERPOLATION_PATH: "((foundation))"
      input_mapping:
        files: configuration
      output_mapping:
        interpolated-files: interpolated-files
    - task: staged-config
      image: platform-automation-image
      file: platform-automation-tasks/tasks/staged-config.yml
      params:
        PRODUCT_NAME: pivotal-container-service
        ENV_FILE: ((foundation))/env/env.yml
      input_mapping:
        env: interpolated-files
      output_mapping:
        generated-config: generated-config
    - task: run-errand
      image: platform-automation-image
      file: configuration/custom-tasks/run-errand.yml
      input_mapping:
        env: interpolated-files
        config: generated-config
      params:
        ENV_FILE: ((foundation))/env/env.yml
        ERRAND_NAME: upgrade-all-service-instances
        CONFIG_FILE: pivotal-container-service.yml
      on_failure:
        put: notify
        params:
          alert_type: failed
          message: "((foundation)) pks service instance errand failed."
  
- name: upgrade-all-pcc-instances
  plan:
    - in_parallel:
        - get: platform-automation-image
          params:
            unpack: true
        - get: platform-automation-tasks
          params:
            unpack: true
        - get: configuration
        - get: lock
          passed:
            - upgrade-all-redis-instances
          trigger: true
    - task: credhub-interpolate
      image: platform-automation-image
      file: platform-automation-tasks/tasks/credhub-interpolate.yml
      params:
        CREDHUB_CLIENT: ((credhub-client))
        CREDHUB_SECRET: ((credhub-secret))
        CREDHUB_SERVER: ((credhub-server))
        CREDHUB_CA_CERT: ((credhub-ca-cert))
        PREFIX: /((foundation))
        INTERPOLATION_PATH: "((foundation))"
      input_mapping:
        files: configuration
      output_mapping:
        interpolated-files: interpolated-files
    - task: staged-config
      image: platform-automation-image
      file: platform-automation-tasks/tasks/staged-config.yml
      params:
        PRODUCT_NAME: p-cloudcache
        ENV_FILE: ((foundation))/env/env.yml
      input_mapping:
        env: interpolated-files
      output_mapping:
        generated-config: generated-config
    - task: run-errand
      image: platform-automation-image
      file: configuration/custom-tasks/run-errand.yml
      input_mapping:
        env: interpolated-files
        config: generated-config
      params:
        ENV_FILE: ((foundation))/env/env.yml
        ERRAND_NAME: upgrade-all-service-instances
        CONFIG_FILE: p-cloudcache.yml
      on_failure:
        put: notify
        params:
          alert_type: failed
          message: "((foundation)) pcc service instance errand failed."
  
- name: upgrade-all-redis-instances
  plan:
    - in_parallel:
        - get: platform-automation-image
          params:
            unpack: true
        - get: platform-automation-tasks
          params:
            unpack: true
        - get: configuration
        - get: lock
          passed:
            - upgrade-all-rabbitmq-instances
          trigger: true
    - task: credhub-interpolate
      image: platform-automation-image
      file: platform-automation-tasks/tasks/credhub-interpolate.yml
      params:
        CREDHUB_CLIENT: ((credhub-client))
        CREDHUB_SECRET: ((credhub-secret))
        CREDHUB_SERVER: ((credhub-server))
        CREDHUB_CA_CERT: ((credhub-ca-cert))
        PREFIX: /((foundation))
        INTERPOLATION_PATH: "((foundation))"
      input_mapping:
        files: configuration
      output_mapping:
        interpolated-files: interpolated-files
    - task: staged-config
      image: platform-automation-image
      file: platform-automation-tasks/tasks/staged-config.yml
      params:
        PRODUCT_NAME: p-redis
        ENV_FILE: ((foundation))/env/env.yml
      input_mapping:
        env: interpolated-files
      output_mapping:
        generated-config: generated-config
    - task: run-errand
      image: platform-automation-image
      file: configuration/custom-tasks/run-errand.yml
      input_mapping:
        env: interpolated-files
        config: generated-config
      params:
        ENV_FILE: ((foundation))/env/env.yml
        ERRAND_NAME: upgrade-all-service-instances
        CONFIG_FILE: p-redis.yml
      on_failure:
        put: notify
        params:
          alert_type: failed
          message: "((foundation)) redis service instance errand failed."