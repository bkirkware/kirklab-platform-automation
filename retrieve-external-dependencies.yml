resource_types:
- name: pivnet
  type: docker-image
  source:
    repository: pivotalcf/pivnet-resource
    tag: latest-final

resources:
- name: daily
  type: time
  source:
    interval: 24h

- name: config
  type: git
  source:
    uri: ((platform-automation-pipelines-kirklab-env))
    private_key: ((platform-automation-pipelines-kirklab-deploy-key-readonly.private_key))
    branch: master
    submodules: all
    depth: 1

- name: opsman-product
  type: s3
  source:
    access_key_id: ((aws_access_key_id))
    bucket: ((aws_buckets_pivnet_products))
    region_name: ((aws_region_name))
    secret_access_key: ((aws_secret_access_key))
    regexp: pcf-vsphere-(.*).ova

- name: platform-automation-pivnet
  type: pivnet
  source:
    api_token: ((pivnet-refresh-token))
    product_slug: platform-automation
    product_version: 2\.(.*)
    sort_by: semver

- name: platform-automation-tasks
  type: s3
  source:
    access_key_id: ((aws_access_key_id))
    bucket: ((aws_buckets_pivnet_products))
    region_name: ((aws_region_name))
    secret_access_key: ((aws_secret_access_key))
    regexp: platform-automation-tasks-(.*).zip

- name: platform-automation-image
  type: s3
  source:
    access_key_id: ((aws_access_key_id))
    bucket: ((aws_buckets_pivnet_products))
    region_name: ((aws_region_name))
    secret_access_key: ((aws_secret_access_key))
    regexp: platform-automation-image-(.*).tgz

jobs:

- name: fetch-opsman
  plan:
  - aggregate:
    - get: daily
      trigger: true
    - get: platform-automation-image
      params:
        unpack: true
    - get: platform-automation-tasks
      params:
        unpack: true
    - get: config
  - task: credhub-interpolate
    image: platform-automation-image
    file: platform-automation-tasks/tasks/credhub-interpolate.yml
    params:
      CREDHUB_CLIENT: ((credhub_client))
      CREDHUB_SECRET: ((credhub_secret))
      CREDHUB_SERVER: ((credhub_server))
      CREDHUB_CA_CERT: ((credhub_ca_cert))
      PREFIX: /((foundation))
      INTERPOLATION_PATH: "((foundation))/download-product-configs"
    input_mapping:
      files: config
    output_mapping:
      interpolated-files: config
  - task: download-opsman-image
    image: platform-automation-image
    file: platform-automation-tasks/tasks/download-product.yml
    params:
      CONFIG_FILE: ((foundation))/download-product-configs/opsman.yml
  - aggregate:
    - put: opsman-product
      params:
        file: downloaded-product/*


- name: fetch-platform-automation
  # We use the pivnet resource to bootstrap the pipeline,
  # and because this product is part of the pipeline, not the foundation
  plan:
  - get: platform-automation-pivnet
    trigger: true
  - aggregate:
    - put: platform-automation-tasks
      params:
        file: platform-automation-pivnet/*tasks*.zip
    - put: platform-automation-image
      params:
        file: platform-automation-pivnet/*image*.tgz