resource_types:
- name: pivnet
  type: docker-image
  source:
    repository: pivotalcf/pivnet-resource
    tag: latest-final

resources:

- name: platform-automation-pivnet
  type: pivnet
  source:
    api_token: ((pivnet-refresh-token))
    product_slug: platform-automation
    product_version: 2\.(.*)
    sort_by: semver

- name: platform-automation-tasks
  type: s3
  source:
    access_key_id: ((aws_access_key_id))
    bucket: ((aws_buckets_pivnet_products))
    region_name: ((aws_region_name))
    secret_access_key: ((aws_secret_access_key))
    regexp: platform-automation-tasks-(.*).zip

- name: platform-automation-image
  type: s3
  source:
    access_key_id: ((aws_access_key_id))
    bucket: ((aws_buckets_pivnet_products))
    region_name: ((aws_region_name))
    secret_access_key: ((aws_secret_access_key))
    regexp: platform-automation-image-(.*).tgz

jobs:

- name: fetch-platform-automation
  # We use the pivnet resource to bootstrap the pipeline,
  # and because this product is part of the pipeline, not the foundation
  plan:
  - get: platform-automation-pivnet
    trigger: true
  - aggregate:
    - put: platform-automation-tasks
      params:
        file: platform-automation-pivnet/*tasks*.zip
    - put: platform-automation-image
      params:
        file: platform-automation-pivnet/*image*.tgz